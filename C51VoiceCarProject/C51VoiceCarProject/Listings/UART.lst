C51 COMPILER V9.60.7.0   UART                                                              03/21/2024 10:21:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: D:\Keil C51\C51\BIN\C51.EXE UART.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\UART.
                    -lst) OBJECT(.\Objects\UART.obj)

line level    source

   1          #include "UART.h"
   2          
   3          /******************************************************************************/
   4          /* 函数名称  : UART_Init                                                                  */
   5          /* 函数描述  : 串口初始化，利用定时器1设置9600波特率                                                      */    
   6          /* 输入参数  : 无                                                             */
   7          /* 参数描述  : 无                                                                                     */
   8          /* 返回值    : 无                                                             */
   9          /******************************************************************************/
  10          void UART_Init()
  11          {
  12   1              AUXR = 0x01;
  13   1              PCON &= 0x7F;           //波特率不倍速
  14   1              SCON = 0x50;            //8位数据,可变波特率
  15   1              TMOD &= 0x0F;           //清除定时器1模式位
  16   1              TMOD |= 0x20;           //设定定时器1为8位自动重装方式
  17   1              TL1 = 0xFD;             //设定定时初值
  18   1              TH1 = 0xFD;             //设定定时器重装值
  19   1              ET1 = 0;                //禁止定时器1中断
  20   1              TR1 = 1;                //启动定时器1
  21   1              EA = 1;
  22   1              ES = 1;
  23   1      }
  24          
  25          /******************************************************************************/
  26          /* 函数名称  : Write_Byte                                                                 */
  27          /* 函数描述  : 写入一个字节到串口中，写完的标志是TI = 1                                           */    
  28          /* 输入参数  : byte                                                           */
  29          /* 参数描述  : 写入一个字节                                                                   */
  30          /* 返回值    : 无                                                             */
  31          /******************************************************************************/
  32          void Write_Byte(unsigned char byte)
  33          {
  34   1              SBUF = byte;
  35   1              while(!TI);
  36   1              TI = 0;
  37   1      }
  38          
  39          /******************************************************************************/
  40          /* 函数名称  : Write_Data                                                                 */
  41          /* 函数描述  : 利用写入一个字节的函数，实现写入一个字符串                                                 */    
  42          /* 输入参数  : str                                                            */
  43          /* 参数描述  : 字符串指针                                                                     */
  44          /* 返回值    : 无                                                             */
  45          /******************************************************************************/
  46          void Write_Data(unsigned char *str)
  47          {
  48   1              while(*str != '\0')
  49   1              {
  50   2                      Write_Byte(*str);
  51   2                      str++;
  52   2              }
  53   1      }
  54          
C51 COMPILER V9.60.7.0   UART                                                              03/21/2024 10:21:55 PAGE 2   

  55          /******************************************************************************/
  56          /* 函数名称  : UART_Handle                                                                        */
  57          /* 函数描述  : 串口中断处理函数，收到一个字节或发送完一个字节，产生中断           */    
  58          /* 输入参数  : 无                                                                     */
  59          /* 参数描述  : 无                                                                                     */
  60          /* 返回值    : 无                                                             */
  61          /******************************************************************************/
  62          void UART_Handle() interrupt 4
  63          {
  64   1              unsigned char tmp;
  65   1              if(RI)
  66   1              {
  67   2                      RI = 0;
  68   2                      tmp = SBUF;
  69   2                      switch(tmp)
  70   2                      {
  71   3                              case GOFORWARD:
  72   3                                      Go_Forward();
  73   3                                      Delay10ms();
  74   3                              break;
  75   3                              case GOBACK:
  76   3                                      Go_Back();
  77   3                                      Delay10ms();
  78   3                              break;
  79   3                              case GOLEFT:
  80   3                                      Go_Left();
  81   3                                      Delay10ms();
  82   3                              break;
  83   3                              case GORIGHT:
  84   3                                      Go_Right();
  85   3                                      Delay10ms();
  86   3                              break;
  87   3                      }
  88   2              }
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    159    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
